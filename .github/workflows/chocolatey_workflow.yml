name: Windows CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    environment:
      name: Actions

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4


      - name: Install Chocolatey
        shell: pwsh
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor [System.Net.SecurityProtocolType]::Tls12
          Invoke-Expression ((New-Object Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          choco feature disable --name=showDownloadProgress

      - name: Pack Chocolatey
        shell: pwsh
        env:
          CHOCOLATEY_API_KEY: ${{ secrets.CHOCOLATEY_API_KEY }}
        run: |
          Write-Host "Switching to working directory $env:GITHUB_WORKSPACE"
          Set-Location -Path $env:GITHUB_WORKSPACE

          $repoList = @()

          if ($env:GITHUB_WORKSPACE) {
              $repoList += $env:GITHUB_WORKSPACE
          }
          $repoList += "https://community.chocolatey.org/api/v2/"

          $sourceArg = $repoList -join ";"
          Write-Host "Installing fileseek from sources: $sourceArg"          

          # Paket-Verzeichnis anhand .nuspec finden, sonst Workspace verwenden
          $nuspec = Get-ChildItem -Path $env:GITHUB_WORKSPACE -Recurse -Filter *.nuspec | Select-Object -First 1
          if ($nuspec) {
            $packageDir = $nuspec.Directory.FullName
            Write-Host "Detected package directory: $packageDir (from $($nuspec.Name))"
          } else {
            $packageDir = $env:GITHUB_WORKSPACE
            Write-Host "No .nuspec found, using workspace: $packageDir"
          }

          Set-Location -Path $packageDir

          $targets = @(
            'tools\chocolateyinstall.ps1',
            'tools\chocolateyuninstall.ps1'
          )

          foreach ($rel in $targets) {
            $f   = Join-Path $packageDir $rel
            if (Test-Path -LiteralPath $f) {
              Write-Host "Processing $rel"
              $tmp = "$f.~"
              Get-Content -LiteralPath $f |
                Where-Object { $_ -notmatch '^\s*#' } |
                ForEach-Object { $_ -replace '(^.*?)\s*?[^`]#.*','$1' } |
                Out-File -LiteralPath $tmp -Encoding utf8
              Move-Item -Force -LiteralPath $tmp -Destination $f
            } else {
              Write-Host "Skipping missing file: $rel"
            }
          }

          choco pack
          choco install fileseek -y -s $sourceArg

          if($env:CHOCOLATEY_API_KEY)
          {
            if(Test-Path "C:\ProgramData\chocolatey\lib\fileseek\tools\FileSeek64")
            {
              choco push -s "https://push.chocolatey.org/" --api-key="$env:CHOCOLATEY_API_KEY"
            }
          }

          
